<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="WordPress Plugin PHPMD Ruleset"
         xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">

    <description>Custom PHPMD rules for WordPress plugins that excludes WordPress-specific patterns</description>

    <!-- Clean Code Rules (with WordPress exceptions) -->
    <rule ref="rulesets/cleancode.xml">
        <!-- Exclude ElseExpression - WordPress often requires else for security patterns -->
        <exclude name="ElseExpression"/>
        <!-- Exclude MissingImport - WordPress core classes are auto-loaded -->
        <exclude name="MissingImport"/>
        <!-- Exclude StaticAccess - Allow for singleton patterns -->
        <exclude name="StaticAccess"/>
    </rule>
    
    <!-- Code Size Rules -->
    <rule ref="rulesets/codesize.xml">
        <!-- Override TooManyPublicMethods for WordPress plugins that need hook callbacks -->
        <exclude name="TooManyPublicMethods"/>
    </rule>
    
    <!-- Custom rule: Allow more public methods for WordPress plugins -->
    <rule ref="rulesets/codesize.xml/TooManyPublicMethods">
        <properties>
            <!-- WordPress plugins often need many public hook callbacks -->
            <property name="maxmethods" value="15"/>
        </properties>
    </rule>
    
    <!-- Controversial Rules (with WordPress exceptions) -->
    <rule ref="rulesets/controversial.xml">
        <!-- Exclude Superglobals - WordPress securely uses $_GET, $_POST, etc. -->
        <exclude name="Superglobals"/>
    </rule>
    
    <!-- Design Rules (with WordPress exceptions) -->
    <rule ref="rulesets/design.xml">
        <!-- Exclude ExitExpression - Required for WordPress file downloads and redirects -->
        <exclude name="ExitExpression"/>
    </rule>
    
    <!-- Naming Rules (with WordPress exceptions) -->
    <!-- Import all naming rules individually and exclude WordPress-incompatible ones -->
    <rule ref="rulesets/naming.xml/ShortVariable"/>
    <rule ref="rulesets/naming.xml/LongVariable"/>
    <rule ref="rulesets/naming.xml/ShortMethodName"/>
    <rule ref="rulesets/naming.xml/ConstructorWithNameAsEnclosingClass"/>
    <rule ref="rulesets/naming.xml/ConstantNamingConventions"/>
    <rule ref="rulesets/naming.xml/BooleanGetMethodName"/>
    <!-- Explicitly exclude WordPress-incompatible naming rules -->
    <!-- <rule ref="rulesets/naming.xml/CamelCaseClassName"/> - Excluded for WordPress -->
    <!-- <rule ref="rulesets/naming.xml/CamelCaseMethodName"/> - Excluded for WordPress -->
    <!-- <rule ref="rulesets/naming.xml/CamelCaseVariableName"/> - Excluded for WordPress -->
    <!-- <rule ref="rulesets/naming.xml/CamelCaseParameterName"/> - Excluded for WordPress -->
    
    <!-- Unused Code Rules -->
    <rule ref="rulesets/unusedcode.xml"/>

    <!-- WordPress-specific exclusions (additional safety) -->
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>

</ruleset>